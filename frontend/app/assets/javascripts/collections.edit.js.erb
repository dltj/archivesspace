//= require jquery.cookie
//= require jstree

$(function() {

    var form_changed = false,
        $tree, // will be set upon initTree()
        $container = $("#object_container"),
        collection_tree_data = AS.tree_data["collection-id-" + $(".archives-tree").data("collection-id")];

    var renderTree = function() {
        $("#archives_tree").html(AS.renderTemplate("tree_template", {tree: collection_tree_data}));
        $tree = $("#archives_tree");
     }

    var rerenderTree = function() {
        var selected_node_id = $(".selected", $tree).attr("id");
        
        if (selected_node_id === "newAO") {
           selected_node_id = "archival_object_" + $("#ao_id", $container).val();
        }

        $.getJSON(APP_PATH + "collections/" + collection_tree_data.collection_id + "/tree", function(json) {
            collection_tree_data = json;

            renderTree();

            $("#"+selected_node_id, $tree).addClass("selected");

            initTree();
        });
    };
   
    var initForm = function(html) {
      $container.html(html);         

      var $form = $("form", $container);

      $(".btn-primary", $form).attr("disabled", "disabled");
      $(".btn-cancel", $form).html("Revert Changes").attr("disabled", "disabled");
      $(".btn-cancel", $form).before("<a id='save_and_finish_editing' class='btn btn-success' href='" + APP_PATH + "collections/" + collection_tree_data.collection_id + "'>Finish Editing</a>");
      
      $form.bind("form-changed", function() {
          form_changed = true;
          $(".btn-primary", $form).removeAttr("disabled");
          $(".btn-cancel", $form).removeAttr("disabled");
      });

      $form.ajaxForm({
          data: {
             inline: true
          },
          beforeSubmit: function() {
            $(".btn-primary", $form).attr("disabled","disabled");
          },
          success: function(response, status, xhr) {
             initForm(response);

             if ($container.find(".alert-error:first, .alert-warning:first").length) {
                $container.triggerHandler("submit.error");
             } else {
                $container.triggerHandler("submit.success");
                form_changed = false;
                rerenderTree();
             }
          }, 
          error: function(obj, errorText, errorDesc) {
            $form.triggerHandler("submit.error");
            $(".btn-primary", $form).removeAttr("disabled");
          }
       });
  };
   
   var loadPaneForNode = function(nodeEl) {
        if (nodeEl.attr("rel") === "archival_object") {
            $.ajax({
                url: APP_PATH+"archival_objects/"+nodeEl.data("id")+"/edit?inline=true",
                success: function(html) {
                    initForm(html);
                }
            });
        } else if (nodeEl.attr("rel") === "collection") {         
             $.ajax({
                url: APP_PATH+"collections/"+nodeEl.data("id")+"/edit?inline=true",
                success: function(html) {
                    initForm(html);
                }
            });
        }
   };

   var loadTreeActionsForNode = function(nodeEl) {
      $("#archives_tree_toolbar").html(AS.renderTemplate("tree_toolbar_template"));
      if ((nodeEl.hasClass("collection") && nodeEl.find("> ul > li").length>0) || nodeEl.attr("id") === "newAO") {
         return;
      }
      $(".btn-toolbar", "#archives_tree_toolbar").append(AS.renderTemplate("tree_toolbar_addchild_template"));
      if (!nodeEl.hasClass("collection") && !nodeEl.parents("li:first").hasClass("collection")) {
         $(".btn-toolbar", "#archives_tree_toolbar").append(AS.renderTemplate("tree_toolbar_addsibling_template"));
      }      
   };

   var addEventBindings = function() {

      $(".archives-tree-container").on("click", ".add-child-archival-object-analog", function() {
         var $selected = $(".selected", $tree);
         if ($selected.length === 0) {
            return;
         }
         
         var data = {
            collection: collection_tree_data.collection_id
         };
         
         if ($selected.attr("rel") === "archival_object") {
            data.parent = $selected.data("id");
         }
         
         $.ajax({
            url: APP_PATH + "archival_objects/new",
            data: data,
            type: "GET",
            success: function(html) {
               initForm(html);
               $tree.jstree("create_node", $selected, "last", {"attr":{"id": "newAO"}, "data": {"title": "New Analog Object"}});
               $("#newAO", $tree).addClass("analog").attr("rel", "archival_object");
               $tree.jstree("open_node", $selected);
               $tree.jstree("deselect_all");
               $tree.jstree("select_node", "#newAO");               
               $("form", $container).triggerHandler("form-changed");
            }, 
            error: function() {
               console.log("ERROR! $('.archives-tree-container').on('click', '.add-child-archival-object-analog')");
            }
            
         });
      });
      
      $(".archives-tree-container").on("click", ".add-sibling-archival-object-analog", function() {
         var $selected = $(".selected", $tree);
         if ($selected.length === 0) {
            return;
         }
         
         var data = {
            collection: collection_tree_data.collection_id
         };
         
         if ($selected.attr("rel") === "archival_object") {
            data.parent = $selected.parents("li:first").data("id");
         }
         
         $.ajax({
            url: APP_PATH + "archival_objects/new",
            data: data,
            type: "GET",
            success: function(html) {
               initForm(html);
               $tree.jstree("create_node", $selected.parents("li:first"), "last", {"attr":{"id": "newAO"}, "data": {"title": "New Analog Object"}});
               $("#newAO", $tree).addClass("analog").attr("rel", "archival_object");
               $tree.jstree("open_node", $selected.parents("li:first"));
               $tree.jstree("deselect_all");
               $tree.jstree("select_node", "#newAO");
               $("form", $container).triggerHandler("form-changed");    
            }, 
            error: function() {
               console.log("ERROR! $('.archives-tree-container').on('click', '.add-child-archival-object-analog')");
            }
            
         });
      });
 
      $container.on("click", ".btn-cancel", function() {
         loadPaneForNode($(".selected", $tree));
      });

      $(".expand-tree", ".archives-tree-container").on("click", function() {
          $(".archives-tree-container").addClass("expanded");
          $(".archives-tree-container").animate({
              width: $(".archives-tree-container").parents(".container:first").width()-5
          }, 500, function() {
              $(".expand-tree", ".archives-tree-container").hide();
              $(".retract-tree", ".archives-tree-container").show();
          });
      });
      
      $(".retract-tree", ".archives-tree-container").on("click", function() {
          $(".archives-tree-container").animate({
              width: $(".archives-tree-container").parent().width()
          }, 500, function() {
              $(".archives-tree-container").removeClass("expanded");
              $(".archives-tree-container").css("width", "auto");
              $(".retract-tree", ".archives-tree-container").hide();
              $(".expand-tree", ".archives-tree-container").show();
          });
      });
   };
   
   var initTree = function(onTreeLoadCallback) {
      $tree = $(".archives-tree").jstree({

          "themes": {
             "theme": "default",
             "url": "<%= asset_path('jstree/style.css') %>"
          },
          "dnd": {
             "drop_target" : false,
             "drag_target" : false
          },
          "ui": {
            "selected_parent_close": false,
            "selected_parent_open": true
          },
          "crrm" : {
             "move" : {
                 "check_move" : function (m) {
                     // can't move root archival object
                     if (m.o[0].id === "root") {
                       return false;
                     }
                     // can't move to above the root archival object
                     if ($(m.np[0]).hasClass("archives-tree")) {
                       return false;
                     }
                     return true;
                 }
             }
         },
         "core": {
           "animation": 0 
         },
         "cookies": {
             "save_selected": false
         },
         "plugins": [ "themes", "html_data", "ui", "crrm", "dnd", "cookies"]
      }).bind("loaded.jstree", function (event, data) {
         if ($(".selected", $tree).length === 0) {
            $("li:first", $tree).addClass("selected");
         }
         $tree.jstree("open_node", $(".selected", $tree));
         $tree.jstree("select_node", $(".selected", $tree));

         loadTreeActionsForNode($(".selected", $tree));
         
         if (onTreeLoadCallback) onTreeLoadCallback();
      }).bind("before.jstree", function (event, data) {
         // check current form
         if (form_changed && data.func === "select_node") {                     
            event.preventDefault();
            event.stopImmediatePropagation();

            var $target_node = $(data.args[0]).parent(); // get the <li> node above the <a>
            
            // open save your changes modal
            AS.openCustomModal("saveYourChangesModal", "Save Your Changes", AS.renderTemplate("save_changes_modal_template"));
            
            $("#saveChangesButton", "#saveYourChangesModal").on("click", function() {
               $("form", $container).triggerHandler("submit");
               
               var onSubmitSuccess = function() {
                  form_changed = false
                  $tree.jstree("deselect_all");
                  $tree.jstree("select_node", $target_node);
                  $("#saveYourChangesModal").modal("hide"); 
               };
               
               var onSubmitError = function() {
                  $("#saveYourChangesModal").modal("hide"); 
               };
               
               $container.bind("submit.success", onSubmitSuccess);
               $container.bind("submit.error", onSubmitError);              
            });

            $("#dismissChangesButton", "#saveYourChangesModal").on("click", function() {
               form_changed = false;
               $tree.jstree("deselect_all");
               $tree.jstree("select_node", $target_node);
               $("#saveYourChangesModal").modal("hide");               
            });
            
            return false;
         }
      }).bind("select_node.jstree", function (event, data) {      
         var $current = $(".selected", $tree);
         var $selected = $(data.rslt.obj);
         
         if ($selected.hasClass("selected")) {
            return;
         }

         $current.removeClass("selected");
         $selected.addClass("selected");
         $tree.jstree("open_node", $selected);

         loadPaneForNode($selected);
         loadTreeActionsForNode($selected);
      });
   };
   
   
   renderTree();
   initTree(function() {
       loadPaneForNode($(".selected", $tree));
   });   
   addEventBindings();
   
});